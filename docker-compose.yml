services:
  postgres:
    image: postgres:16-alpine
    container_name: realtime-agents-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: realtime_agents
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: realtime-agents-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/realtime_agents
      - NEXT_PUBLIC_BASE_URL=http://localhost:3000
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    command: sh -c "
      echo 'Waiting for database...' &&
      until nc -z postgres 5432; do
        echo 'Database not ready, waiting...' && sleep 2;
      done &&
      echo 'Setting up database...' &&
      npx prisma db push --skip-generate &&
      echo 'Starting app...' &&
      npm run dev
      "

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge